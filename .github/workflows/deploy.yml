name: OME Backend CI/CD

on:
  push:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase image name
        id: prep
        run: echo "REPO_NAME=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/dev-ome-backend:${{ github.sha }}
            ghcr.io/${{ env.REPO_NAME }}/dev-ome-backend:latest
            ghcr.io/${{ env.REPO_NAME }}/dev-ome-backend:${{ github.ref_name }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Coolify
        id: coolify-deploy
        run: |
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "https://coolify.officemadeeasy.eu/api/v1/deploy?uuid=${{ secrets.COOLIFY_WEBHOOK_ID }}&force=true" \
          -H "Authorization: Bearer ${{ secrets.COOLIFY_WEBHOOK_TOKEN }}")
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          echo "HTTP status code: $HTTP_CODE"
          echo "Response body: $BODY"
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "Coolify deployment triggered successfully"
          else
            echo "Coolify deployment failed"
            exit 1
          fi

      - name: Wait for Coolify deployment to complete
        run: |
          echo "Waiting for Coolify deployment to complete (60 seconds)..."
          sleep 60  # Warte 60 Sekunden, damit Coolify das Deployment abschlieÃŸen kann

      - name: Notify Slack (Production)
        if: github.ref_name == 'main' && success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {"text":"âœ… Deployment to *Production* completed successfully for OME Backend!"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (Staging)
        if: github.ref_name == 'develop' && success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {"text":"ðŸš€ Deployment to *Staging* completed successfully for OME Backend!"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}